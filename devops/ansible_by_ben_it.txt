( i )

-> ssh-copy-id ip ( configuring so that, no need to login with password )

-> default configuration in /etc/ansible ( can work with it, or copy it in another dir to ease myself )
-> cp -R /etc/ansible myPlatform && cd myPlatform
-> ls -lha ( there'll be ansible.cfg, hosts )
-> vi ansible.cfg
  inventory = hosts ( instead of default /etc/ansible/hosts, use hosts )
-> vi hosts
  write the fqdn or ip or etc.	 

## check if ping is working

-> ansible -m ping all ( or ip ) ( this is an ad-hoc command ) ( m for module, here ping module )

## check all hostname & others with command

-> ansible -m shell -a 'hostname' all ( shell module, a for command )
-> ansible -m shell -a 'df -h' all ( available disk space on the server )
-> ansible -m shell -a 'whoami' all ( whoami command )

## add users to the server
-> ansible -b -K -m user -a 'name=testuser' all ( with sudo privileges, b for become, K ask for privilege escalation password, module user ) ( it'll ask for sudo password ) ( it'll asked the password of the user's that were added by ssh )

## show created users of all servers
-> ansible -m shell -a 'getent passwd | grep testuser' all

## deleted users that was created
-> ansible -b -K -m user -a 'name=testuser state=absent' all


( ii ) Roles & Playbooks

-> roles: roles are list of commands, that ansible will execute on target machine in a given order
-> playbooks: a playbooks is then used to determine which role should be applied to which target machine.
-> Every role is a directory below roles and it must at least contain a folder called tasks which contains a file named main.yml

##
-> mkdir -p roles/basic/tasks && cd roles/basic/tasks && touch main.yml
-> vim main.yml
- name: "installing vim"
  apt: pkg=vim state=installed ( it could give error, use latest instead of installed )

-> cd ../../..
-> vim playbook.yml
---
- hosts: all
  become: true
  roles:
  - basic

$ ansible-playbook -K playbook.yml ( it'll run the playbook.yml )

-> add others in main.yml
- name: "Installing dns-utils"
  apt: pkg=dnsutils state=latest

- name: "Installing GIT"
  apt: pkg=git state=latest

$ ansible-playbook -K playbook.yml

------> green for already installed in machine, orange for newly installed by cmd

## install list of packages, instead of define frequentyly
- name: "Installing packages"
  apt: pkg={{ item }} state=latest
  with_items:
  - vim
  - dnsutils
  - git
  - ntp
  - at
  - lvm2

## copy 

- name: "Adding bashrc"
  copy: src=../files/bash.bashrc dest=/etc/bash.bashrc owner=root group=root mode=0644

- name: "Removing sultan bashrc"
  shell: creates=/home/sultan/.bashrc_backup mv /home/sultan/.bashrc /home/sultan/.bashrc_backup

$ ansible-playbook -K playbook.yml


( iii ) Host specific roles

### proxy server

-> mkdir -p roles/webservers/tasks && cd roles/webservers/tasks && sudo vim main.yml

